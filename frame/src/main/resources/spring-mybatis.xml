<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc  
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<context:component-scan base-package="com.loong" />
	<aop:aspectj-autoproxy/>

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:application.properties" />

	<!-- 数据源配置,使用应用内的proxool数据库连接池 -->
	<bean id="business_write" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<!-- Connection Info destroy-method="close"-->
		<property name="driver" value="${jdbc.driver}" />
		<property name="driverUrl" value="${business.write.url}" />
		<property name="user" value="${business.write.username}" />
		<property name="password" value="${business.write.password}" /> 
		<property name="alias" value="master_db" /> 

		<!-- 测试的SQL执行语句 -->
		<property name="houseKeepingTestSql" value="select count(*) from dual" />
		<!-- 最少保持的空闲连接数 （默认2个） -->
		<property name="prototypeCount" value="${jdbc.prototypeCount}" />
		<!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒） -->
		<property name="houseKeepingSleepTime" value="${jdbc.hourseKeepingSleepTime}" />
		<!-- 最大活动时间(毫秒)(超过此时间线程将被kill,默认为5分钟) -->
		<property name="maximumActiveTime" value="${jdbc.maximumActiveTime}" />
		<!-- 连接最长时间(毫秒)(默认为4个小时) -->
		<property name="maximumConnectionLifetime" value="${jdbc.maximumConnectionLifetime}" />
		<!-- 最小连接数 （默认2个） -->
		<property name="minimumConnectionCount" value="${jdbc.minimumConnectionCount}" />
		<!-- 最大连接数 （默认5个） -->
		<property name="maximumConnectionCount" value="${jdbc.maximumConnectionCount}" />
	</bean>
	<bean id="business_read" class="org.logicalcobwebs.proxool.ProxoolDataSource" >
		<!-- Connection Info destroy-method="close"-->
		<property name="driver" value="${jdbc.driver}" />
		<property name="driverUrl" value="${business.read.url}" />
		<property name="user" value="${business.read.username}" />
		<property name="password" value="${business.read.password}" />
		<property name="alias" value="slave_db" /> 
		<!-- 测试的SQL执行语句 -->
		<property name="houseKeepingTestSql" value="select count(*) from dual" />
		<!-- 最少保持的空闲连接数 （默认2个） -->
		<property name="prototypeCount" value="${jdbc.prototypeCount}" />
		<!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒） -->
		<property name="houseKeepingSleepTime" value="${jdbc.hourseKeepingSleepTime}" />
		<!-- 最大活动时间(毫秒)(超过此时间线程将被kill,默认为5分钟) -->
		<property name="maximumActiveTime" value="${jdbc.maximumActiveTime}" />
		<!-- 连接最长时间(毫秒)(默认为4个小时) -->
		<property name="maximumConnectionLifetime" value="${jdbc.maximumConnectionLifetime}" />
		<!-- 最小连接数 （默认2个） -->
		<property name="minimumConnectionCount" value="${jdbc.minimumConnectionCount}" />
		<!-- 最大连接数 （默认5个） -->
		<property name="maximumConnectionCount" value="${jdbc.maximumConnectionCount}" /> 
	</bean>
	
	<bean id="dataSource" class="com.loong.frame.common.jdbc.DynamicDataSource">   
        <property name="targetDataSources">   
            <map>   
                <entry key="business_write" value-ref="business_write"/>  
                <entry key="business_read" value-ref="business_read"/>  
            </map>   
        </property>   
        <property name="defaultTargetDataSource" ref="business_write"/>   
    </bean> 

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations" value="classpath:com/loong/**/*Mapper.xml" />
	</bean>

	<!-- myBatis Mapper文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.loong.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 事务管理器配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" order="2"/>

	<!-- Spring jdbcTemplate配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>